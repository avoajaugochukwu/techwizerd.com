<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>useEffect() on Techwizerd - Full Stack Developer - React, Python, Django</title>
    <link>https://techwizerd.com/categories/useeffect/</link>
    <description>Recent content in useEffect() on Techwizerd - Full Stack Developer - React, Python, Django</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 24 Feb 2021 06:36:48 +0100</lastBuildDate><atom:link href="https://techwizerd.com/categories/useeffect/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to use React useEffect to post data and refresh without infinite callback</title>
      <link>https://techwizerd.com/posts/how-to-use-react-use-effect-to-post-data-and-refresh-without-infinite-callback/</link>
      <pubDate>Wed, 24 Feb 2021 06:36:48 +0100</pubDate>
      
      <guid>https://techwizerd.com/posts/how-to-use-react-use-effect-to-post-data-and-refresh-without-infinite-callback/</guid>
      <description>Introduction This tutorial will walk you through updating your page DOM after an API call, using react hooks.
In our example, we would be adding to a list of posts. After a new item is added to the list, we want to trigger react hooks to re-run our fetch API to update the list the user can see. The default behaviour of react useEffect() can lead to an infinite loop, although it is a working solution.</description>
    </item>
    
  </channel>
</rss>
